@model ERPSolution.Models.Dtos.ProductoDto

@{
    ViewBag.Title = "Referencias Inventario";
    ViewBag.Icono = "fa fa-address-book-o";
    Layout = "";
}

@section Styles {
    @*@Styles.Render("~/vendor/select2-3.5.2/css")*@
    <link href="~/Vendor/datatables.net-bs/css/dataTables.bootstrap.min.css" rel="stylesheet" />
    <link href="~/Vendor/bootstrap-toggle-master/css/bootstrap-toggle.min.css" rel="stylesheet" />
    <link href="~/Vendor/bootstrap\dist\css\bootstrap.css" rel="stylesheet" />

}

<div class="panel-body">
    <div class="panel-heading" style="background-color: white; border: solid 1px; border-color: #e4e5e7">
        <div class="panel-body">

            <div id="hbreadcrumb" class="pull-right">

                <button type="button" class="btn btn-mini btn-default" style="border-radius: 25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Enlaces" data-content="<ul>@ViewBag.nombreEnlaces</ul>" data-html="true">
                    <i class="text-info fa fa-tags"></i>
                </button>
                <button type="button" class="btn btn-mini btn-default" style="border-radius: 25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Documentos" data-content="<ul></i><a href=''>Documento 1</a></ul>  <ul></i><a href=''>Documento 2</a></ul> <ul></i><a href=''>Documento 3</a></ul>" data-html="true">
                    <i class="text-primary fa fa-files-o"></i>
                </button>
                <button type="button" class="btn btn-mini btn-default" style="border-radius: 25px" data-container="body" data-toggle="popover" data-placement="left" data-title="Favoritos" data-content="@ViewBag.Favoritos" data-html="true">
                    <i class="text-warning fa fa-star"></i>
                </button>

            </div>
            <h3 class="font-light m-b-xs">
                <i class="text-info @ViewBag.Icono"></i>&nbsp;&nbsp;@ViewBag.Title
            </h3>
            <small>Registro @ViewBag.Title</small>
        </div>
    </div>
</div>

<div class="panel-body" style="padding-top: 0px;">
    <div class="hpanel">
        @if (TempData["mensaje"] != null)
        {
            <div class="alert alert-success  alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" arial-label="close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <p>
                    <i class="fa fa-check fa-2x"></i> @TempData["mensaje"]
                </p>
            </div>
        }

        @if (TempData["mensaje_error"] != null)
        {
            <div class="alert alert-danger  alert-dismissible">
                <button type="button" class="close" data-dismiss="alert" arial-label="close">
                    <span aria-hidden="true">&times;</span>
                </button>
                <p>
                    <i class="fa fa-times fa-2x"></i> @TempData["mensaje_error"]
                </p>
            </div>
        }

        <div id="tabs" class="tab-content">

            <div class="m float-e-margins text-right">
                <div class="tooltip-demo">

                    <div id="div-mensaje"></div>

                </div>
            </div>

            <ul id="tabs-crear" class="nav nav-tabs">
                <li class="active">
                    <a data-toggle="tab" href="#crear"><i class="@ViewBag.Icono"></i>&nbsp;&nbsp;@ViewBag.Title</a>
                </li>
                <li class="">
                    <a href="@Url.Action("Productos", "Producto")"><i class="fa fa-search"></i>&nbsp;&nbsp;Búsquedas</a>
                </li>
            </ul>

            <div id="crear" class="tab-pane active">
                <div class="panel-body">

                    @using (Html.BeginForm("Productos","Producto",FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.Hidden("menu")

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="panel-body-btns text-right">
                                <button class="btn btn-info" type="submit"><i class="fa fa-save"></i>&nbsp;&nbsp;&nbsp;Guardar</button>
                            </div>

                            <div class="hpanel" id="panelHabeasData">
                                <div class="panel-heading hbuilt" style="background-color: #e4e5e7">
                                    <div class="panel-tools">
                                        <a class="showhide">
                                            <i class="fa fa-chevron-up"></i>
                                        </a>

                                    </div>
                                    <i class="@ViewBag.Icono"></i>&nbsp;&nbsp;&nbsp;Datos generales
                                </div>

                                <div class="panel-body">
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Descripción:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Saldo Inicial:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.Saldoinicial, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.Saldoinicial, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Saldo Actual:&nbsp;<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.SaldoActual, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.SaldoActual, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        @*<div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Unidad Medida:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    Html.DropDownList("UnidadMedidaId", null, "", new { @class = "form-control js-source-states", required = "required", placeholder = "Seleccione" })
                                                    Html.ValidationMessageFor(model => model.UnidadMedidaId, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>*@
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Costo Pomedio:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.CostoPromedio, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.CostoPromedio, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Precio Venta:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.PrecioVenta, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.PrecioVenta, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Stock Minimo:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.StockMinimo, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.StockMinimo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>

                                        <div class="col-sm-6">
                                            <div class="form-group">
                                                <label class="control-label col-md-4">Stock Maximo:<span class="text-danger">*</span></label>
                                                <div class="col-md-6">
                                                    @Html.EditorFor(model => model.StockMaximo, new { htmlAttributes = new { @class = "form-control", required = "required", placeholder = "Digite descripción" } })
                                                    @Html.ValidationMessageFor(model => model.StockMaximo, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

</div>

@*<div class="modal fade" id="modal_porcentajes" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Error en porcentaje</h5>
            </div>
            <div class="modal-body">
                El valor del porcentaje no puede ser mayor a 100
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>*@


@section Scripts {
    @*@Scripts.Render("~/bundles/select2/js")*@
    <script src="~/Vendor/bootstrap-toggle-master/js/bootstrap-toggle.min.js">
    </script>
    <script type="text/javascript">

        $(document).ready(function() {
            $('#costo_emergencia').val('');
            $('#por_dscto').val('');
            $('#costo_unitario').val('');
            $('#ref_cantidad_max').val('');
            $('#ref_cantidad_min').val('');
            $('#por_dscto_max').val('');


            $('#menu').val(@ViewBag.id_menu);
            $('.js-source-states').select2();
            if (!$('#ref_estado').prop('checked')) {
                //$('#cntpucrazoninactivo').val('');
                $('#ref_razon_inactivo').prop('required', true);
                $('#inactividad').show();
            }
            $('#stock').hide();
            //recalcular()

            $('form select').each(function(i) {
                this.addEventListener('invalid',
                    function(e) {
                        var _s2Id = `s2id_${e.target.id}`; //s2 autosuggest html ul li element id
                        const _posS2 = $(`#${_s2Id}`).position();
                        //get the current position of respective select2
                        $(`#${_s2Id} ul`).addClass('_invalid'); //add this class with border:1px solid red;
                        //this will reposition the hidden select2 just behind the actual select2 autosuggest field with z-index = -1
                        $(`#${e.target.id}`).attr('style',
                            `display:block !important;position:absolute;z-index:-1;top:${0 -
                            $(`#${_s2Id}`).outerHeight() +
                            30}px;left:${15 - ($(`#${_s2Id}`).width() / 10)}px;`);
                        /*
                        //Adjust the left and top position accordingly
                        */
                        //remove invalid class after 3 seconds
                        setTimeout(function() {
                                $(`#${_s2Id} ul`).removeClass('_invalid');
                            },
                            3000);
                        return true;
                    },
                    false);
            });
        });

        function agregar_precio(id) {
            $('#precio_alterno').val($(`#${id}`).val());
            $('#precio_diesel').val($(`#${id}`).val());
        }

        $('#btn_variosB').click(function() {
            $.ajax({
                url: '/registroReferencias/buscarconsecutivo',
                data: {},
                type: 'post',
                cache: false,
                success: function(codigo) {
                    console.log(codigo);
                    if (codigo.noExiste == true) {
                        swal({
                                title: 'No hay un consecutivo',
                                text:
                                    'Debe iniciar un consecutivo para poder crear referencias VARIOSB, ¿Desea iniciarlo?',
                                type: "warning",
                                showCancelButton: true,
                                confirmButtonColor: "#DD6B55",
                                confirmButtonText: "Si, Iniciar!",
                                cancelButtonText: "No, cancelar!",
                                closeOnConfirm: true,
                                closeOnCancel: false
                            },
                            function(isConfirm) {
                                if (isConfirm) {
                                    window.open('@Url.Action("Index", "iniciovariosb")');
                                } else {
                                    swal("Cancelado", "", "error");
                                }
                            });
                    }
                    if (codigo.noExiste == false) {
                        $('#ref_codigo').val(codigo.ref_cod);
                    }
                }
            });
        });

        function recalcular() {
            $.ajax({
                url: '/registroReferencias/recalcularClasificacionABC'
            });
        }

        function validarCantidades() {
            var mini = 0;
            var max = 0;
            if ($('#ref_cantidad_min').val() == "") {
                mini = 0;
            } else {
                var mini = parseInt($('#ref_cantidad_min').val());
            }

            if ($('#ref_cantidad_max').val() == "") {
                max = 0;
            } else {
                var max = parseInt($('#ref_cantidad_max').val());
            }
            if (mini > max) {
                $('#error_cantidad_max').show();
                setTimeout(function() {
                        $('#error_cantidad_max').hide();
                    },
                    5000);

                $('#ref_cantidad_max').val('');
            } else {
                $('#error_cantidad_max').hide();
            }
        }

        $('#ref_cantidad_max').change(function() {
            validarCantidades();
        });

        $('#ref_cantidad_min').change(function() {
            validarCantidades();
        });

        $('#ref_estado').change(function() {
            if ($('#ref_estado').prop('checked')) {
                $('#inactividad').hide();
                $('#ref_razon_inactivo').prop('required', false);
            } else {
                $('#ref_razon_inactivo').prop('required', true);
                $('#ref_razon_inactivo').val('');
                $('#inactividad').show();
            }
        });

        $('#por_iva').change(function() {
            $('#textIVAVenta').val($('#por_iva option:selected').text());
            $('#valIVAVenta').val($('#por_iva option:selected').val());
        });

        $('#por_iva_compra').change(function() {
            $('#textIVACompra').val($('#por_iva_compra option:selected').text());
            $('#valIVACompra').val($('#por_iva_compra option:selected').val());
        });

        $('#grupo_id').change(function() {
            $.ajax({
                url: '/registroReferencias/buscarSubGrupo',
                data: {
                    grupo: $('#grupo_id').val(),
                },
                type: "post",
                cache: false,
                success: function(data) {
                    var option = "<option></option>";
                    for (let j = 0; j < data.length; j++) {
                        option += ` <option value="${data[j].codigo}">${data[j].Descripcion}</option>`;
                    }
                    $('#subgrupo').empty();
                    $('#subgrupo').append(option);
                },
                complete: function(data) {

                }
            });
        });

        var numero_miles = "";

        function formatNumber(n) {
            n = String(n).replace(/\D/g, "");
            return n === '' ? n : String(n).replace(/\B(?=(\d{3})+(?!\d))/g, ".");
        }

        function miles(id) {
            numero_miles = formatNumber($(`#${id}`).val());
            $(`#${id}`).val(numero_miles);
            //console.log($('#'+id+'').val);
        }

        function addCommas(nStr) {
            nStr += '';
            x = nStr.split('.');
            x1 = x[0];
            x2 = x.length > 1 ? `.${x[1]}` : '';
            const rgx = /(\d+)(\d{3})/;
            while (rgx.test(x1)) {
                x1 = x1.replace(rgx, '$1' + '.' + '$2');
            }
            return x1 + x2;
        }

        function quitCommas(nStr) {
            nStr.toString();
            //console.log(nStr);
            const s = nStr.replace(/\./g, "");
            return s;
        }

        function valida(e, id) //Solo numeros y SOLO 1 punto decimal
        {
            const key = (document.all) ? e.which : e.keyCode;
            cadena = $(`#${id}`).val();
            if (cadena.indexOf('.') == -1) {
                return (key <= 13 || (key >= 48 && key <= 57) || key == 46);
            } else {
                return (key <= 13 || (key >= 48 && key <= 57));
            }
        }

        $("#por_dscto_max").change(function() {
            const max = parseInt(this.max);
            const valor = parseInt(this.value);
            if (valor > max) {
                $("#modal_porcentajes").modal('show');
                this.value = max;
            }
        });

        //----Funcion que valida que el campo solo tenga permitido el ingreso de numeros
        function soloNumeros(e) {
            key = e.keyCode || e.which;
            tecla = String.fromCharCode(key).toLowerCase();
            letras = "1234567890";
            especiales = "8-37-39-46";

            tecla_especial = false;
            for (let i in especiales) {
                if (key == especiales[i]) {
                    tecla_especial = true;
                    break;
                }
            }
            if (letras.indexOf(tecla) == -1 && !tecla_especial) {
                return false;
            }
        }

        function AgregarQuitarFavorito() {
            $.ajax({
                url: '/Inicio/AgregarQuitarFavorito',
                data: {
                    id_menu: @ViewBag.id_menu,
                },
                type: "post",
                cache: false,
                success: function(data) {
                    if (data.esFavorito == true) {
                        $('#areaFavoritos')
                            .html(
                                "<i class='fa fa-close'></i>&nbsp;&nbsp;<a href='#' onclick='AgregarQuitarFavorito();return false;'>Quitar de Favoritos</a>");
                    } else {
                        $('#areaFavoritos')
                            .html(
                                "<i class='fa fa-check'></i>&nbsp;&nbsp;<a href='#' onclick='AgregarQuitarFavorito();return false;'>Agregar a Favoritos</a>");
                    }
                }
            });
        }

    </script>
}